#!/bin/sh
# Chezmoi orchestrator for VSCode extensions and Firefox policies installation

{{- template "chezmoi_logger_setup" . }}

# Hash: {{ include ".data/firefox-policies.json" | sha256sum }}

{{ if eq .osId "linux-arch" }}
    {{- $destinationConfig := index .destinations .destination }}
    
    log_step "Preparing environment for extensions installation"
    
    # Export all necessary environment variables
    export CHEZMOI_OS_ID="{{ .osId }}"
    export CHEZMOI_DESTINATION="{{ .destination }}"
    export CHEZMOI_SOURCE_DIR="{{ .chezmoi.sourceDir }}"
    export CHEZMOI_EXTENSIONS_ENABLED="{{ if $destinationConfig.extensions }}true{{ else }}false{{ end }}"
    export CHEZMOI_EXTENSIONS_LIST="{{ join "," .extensions.code }}"
    export CHEZMOI_LOG_LEVEL="{{ .logging.level }}"
    export CHEZMOI_DRY_RUN="${CHEZMOI_DRY_RUN:-false}"
    export CHEZMOI_VERBOSE="${CHEZMOI_VERBOSE:-false}"
    
    # Determine script path
    SCRIPT_PATH="${CHEZMOI_SOURCE_DIR}/.chezmoiscripts/.lib/development/install-extensions.sh"
    
    log_info "Executing: $(basename "$SCRIPT_PATH")"
    
    # Execute with error handling
    if [ -x "$SCRIPT_PATH" ]; then
        if ! "$SCRIPT_PATH"; then
            handle_error "Extensions installation failed: $(basename "$SCRIPT_PATH")" $?
        fi
    else
        log_error "Script not found or not executable: $SCRIPT_PATH"
        exit 1
    fi
    
    log_success "Extensions installation completed successfully"
    
{{ else }}
    log_error "Unsupported OS: {{ .osId }}"
    log_error "This script requires: linux-arch"
    exit 1
{{ end }}
