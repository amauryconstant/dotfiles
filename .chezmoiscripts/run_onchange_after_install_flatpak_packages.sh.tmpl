#!/usr/bin/env sh

# Script: run_onchange_after_install_flatpak_packages.sh.tmpl
# Purpose: Install and manage Flatpak applications declaratively
# Requirements: Arch Linux, flatpak

# Hash: {{ .packages.flatpak | toJson | sha256sum }}

{{ includeTemplate "log_start" "Managing Flatpak applications..." }}

# Set strict error handling
set -euo pipefail

# Check if flatpak is available
if ! command -v flatpak >/dev/null 2>&1; then
    {{ includeTemplate "log_info" "Flatpak not installed, skipping Flatpak package management" }}
    exit 0
fi

# Build list of desired Flatpak applications from config
{{ includeTemplate "log_step" "Building desired application list from config..." }}
DESIRED_APPS=""
{{- range $category, $apps := .packages.flatpak.packages }}
{{- range $apps }}
DESIRED_APPS="${DESIRED_APPS} {{ . }}"
{{- end }}
{{- end }}

# Get currently installed Flatpak applications
{{ includeTemplate "log_step" "Checking currently installed Flatpak applications..." }}
INSTALLED_APPS=$(flatpak list --app --columns=application 2>/dev/null || echo "")

# Install missing applications
{{ includeTemplate "log_step" "Installing missing Flatpak applications..." }}
for app in $DESIRED_APPS; do
    if echo "$INSTALLED_APPS" | grep -q "^${app}$"; then
        {{ includeTemplate "log_info" "Already installed: $app" }}
    else
        {{ includeTemplate "log_progress" "Installing: $app" }}
        if flatpak install -y flathub "$app"; then
            {{ includeTemplate "log_success" "Installed: $app" }}
        else
            {{ includeTemplate "log_error" "Failed to install: $app" }}
        fi
    fi
done

# Remove applications not in config
{{ includeTemplate "log_step" "Removing Flatpak applications not in config..." }}
if [ -n "$INSTALLED_APPS" ]; then
    for app in $INSTALLED_APPS; do
        if echo "$DESIRED_APPS" | grep -q "$app"; then
            {{ includeTemplate "log_info" "Keeping: $app" }}
        else
            {{ includeTemplate "log_progress" "Removing: $app" }}
            if flatpak uninstall -y "$app"; then
                {{ includeTemplate "log_success" "Removed: $app" }}
            else
                {{ includeTemplate "log_error" "Failed to remove: $app" }}
            fi
        fi
    done
else
    {{ includeTemplate "log_info" "No existing Flatpak applications to clean up" }}
fi

{{ includeTemplate "log_complete" "Flatpak application management completed" }}
